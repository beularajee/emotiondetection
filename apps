from flask import Flask, request, jsonify
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.sequence import pad_sequences
import pickle
import numpy as np

app = Flask(__name__)

# Load model and tokenizer
model = load_model('models/lstm_emotion_model.h5')
with open('models/tokenizer.pkl', 'rb') as f:
    tokenizer = pickle.load(f)
with open('models/label_encoder.pkl', 'rb') as f:
    label_encoder = pickle.load(f)

MAX_LEN = 100

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json()
    text = data['text']
    seq = tokenizer.texts_to_sequences([text])
    padded = pad_sequences(seq, maxlen=MAX_LEN)
    pred = model.predict(padded)
    emotion = label_encoder.inverse_transform([np.argmax(pred)])
    return jsonify({'emotion': emotion[0]})

if __name__ == '__main__':
    app.run(debug=True)

